{"ast":null,"code":"import _objectSpread from\"/Users/macbook/Desktop/aphelion/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/macbook/Desktop/aphelion/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useLocation}from'react-router-dom';import{getSiteImages,metaTags,getServerImage,getData}from'../../helpers/api';import Cover from\"../common/Cover\";import BlogPostsDetail from\"./section/BlogPostsDetail\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Blog(){var location=useLocation();var pathname=location.pathname;var url_arr=pathname.split(\"/\");var blog_id=url_arr['2'];var ser_slug=url_arr['3'];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];useEffect(function(){getData(\"blog-details\",blog_id+\"/\"+ser_slug).then(function(data){setState(_objectSpread(_objectSpread({},state),{},{content:data.content,metatags:data.metatags,categories:data.categories}));setLoading(true);});},[]);var content=state.content;if(loading===false)return/*#__PURE__*/_jsxs(\"div\",{id:\"loading\",children:[\" \",/*#__PURE__*/_jsx(\"img\",{src:getSiteImages('/images/loading.gif'),alt:\"Loading\"})]});var detail={cover:{sec_bg:getServerImage('uploads/blog/',content.banner,'thumb_'),heading:content.title},posts:{details:{title:content.title,date:content.date,src:getServerImage('uploads/blog/',content.image,'thumb_')},category:{title:\"Categories\",ul:state.categories}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Cover,{data:detail.cover}),/*#__PURE__*/_jsx(BlogPostsDetail,{data:detail.posts})]});}export default Blog;","map":{"version":3,"sources":["/Users/macbook/Desktop/aphelion/src/components/pages/BlogDetail.jsx"],"names":["React","useState","useEffect","useLocation","getSiteImages","metaTags","getServerImage","getData","Cover","BlogPostsDetail","Blog","location","pathname","url_arr","split","blog_id","ser_slug","loading","setLoading","state","setState","then","data","content","metatags","categories","detail","cover","sec_bg","banner","heading","title","posts","details","date","src","image","category","ul"],"mappings":"yOAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,aAAT,CAAwBC,QAAxB,CAAkCC,cAAlC,CAAkDC,OAAlD,KAAiE,mBAAjE,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,C,6IAEA,QAASC,CAAAA,IAAT,EAAgB,CACf,GAAIC,CAAAA,QAAQ,CAAGR,WAAW,EAA1B,CACA,GAAIS,CAAAA,QAAQ,CAAGD,QAAQ,CAACC,QAAxB,CACA,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAd,CACA,GAAIC,CAAAA,OAAO,CAAGF,OAAO,CAAC,GAAD,CAArB,CACA,GAAIG,CAAAA,QAAQ,CAAGH,OAAO,CAAC,GAAD,CAAtB,CACA,cAA8BZ,QAAQ,CAAC,KAAD,CAAtC,wCAAOgB,OAAP,eAAgBC,UAAhB,eACA,eAA0BjB,QAAQ,CAAC,EAAD,CAAlC,yCAAOkB,KAAP,eAAcC,QAAd,eAGAlB,SAAS,CAAC,UAAM,CAEfK,OAAO,CAAC,cAAD,CAAiBQ,OAAO,CAAG,GAAV,CAAgBC,QAAjC,CAAP,CAAkDK,IAAlD,CAAuD,SAACC,IAAD,CAAU,CAChEF,QAAQ,gCACJD,KADI,MAEPI,OAAO,CAAED,IAAI,CAACC,OAFP,CAGPC,QAAQ,CAAEF,IAAI,CAACE,QAHR,CAIPC,UAAU,CAAEH,IAAI,CAACG,UAJV,GAAR,CAMAP,UAAU,CAAC,IAAD,CAAV,CACA,CARD,EAUA,CAZQ,CAYN,EAZM,CAAT,CAaA,GAAIK,CAAAA,OAAO,CAAGJ,KAAK,CAACI,OAApB,CACA,GAAIN,OAAO,GAAK,KAAhB,CAAuB,mBAAO,aAAK,EAAE,CAAC,SAAR,4BAAmB,YAAK,GAAG,CAAEb,aAAa,CAAC,qBAAD,CAAvB,CAAgD,GAAG,CAAC,SAApD,EAAnB,GAAP,CACvB,GAAMsB,CAAAA,MAAM,CAAG,CACdC,KAAK,CAAE,CACNC,MAAM,CAAEtB,cAAc,CAAC,eAAD,CAAkBiB,OAAO,CAACM,MAA1B,CAAkC,QAAlC,CADhB,CAENC,OAAO,CAAEP,OAAO,CAACQ,KAFX,CADO,CAKdC,KAAK,CAAE,CACNC,OAAO,CAAE,CACRF,KAAK,CAAER,OAAO,CAACQ,KADP,CAERG,IAAI,CAAEX,OAAO,CAACW,IAFN,CAGRC,GAAG,CAAE7B,cAAc,CAAC,eAAD,CAAkBiB,OAAO,CAACa,KAA1B,CAAiC,QAAjC,CAHX,CADH,CAMNC,QAAQ,CAAE,CACTN,KAAK,CAAE,YADE,CAETO,EAAE,CAAEnB,KAAK,CAACM,UAFD,CANJ,CALO,CAAf,CAiBA,mBACC,wCACC,KAAC,KAAD,EAAO,IAAI,CAAEC,MAAM,CAACC,KAApB,EADD,cAEC,KAAC,eAAD,EAAiB,IAAI,CAAED,MAAM,CAACM,KAA9B,EAFD,GADD,CAMA,CAED,cAAetB,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { getSiteImages, metaTags, getServerImage, getData } from '../../helpers/api';\nimport Cover from \"../common/Cover\";\nimport BlogPostsDetail from \"./section/BlogPostsDetail\";\n\nfunction Blog() {\n\tlet location = useLocation();\n\tlet pathname = location.pathname;\n\tlet url_arr = pathname.split(\"/\");\n\tlet blog_id = url_arr['2'];\n\tlet ser_slug = url_arr['3'];\n\tconst [loading, setLoading] = useState(false);\n\tconst [state, setState] = useState({\n\n\t});\n\tuseEffect(() => {\n\n\t\tgetData(\"blog-details\", blog_id + \"/\" + ser_slug).then((data) => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tcontent: data.content,\n\t\t\t\tmetatags: data.metatags,\n\t\t\t\tcategories: data.categories,\n\t\t\t});\n\t\t\tsetLoading(true);\n\t\t});\n\n\t}, []);\n\tlet content = state.content;\n\tif (loading === false) return <div id=\"loading\"> <img src={getSiteImages('/images/loading.gif')} alt=\"Loading\" /></div>;\n\tconst detail = {\n\t\tcover: {\n\t\t\tsec_bg: getServerImage('uploads/blog/', content.banner, 'thumb_'),\n\t\t\theading: content.title,\n\t\t},\n\t\tposts: {\n\t\t\tdetails: {\n\t\t\t\ttitle: content.title,\n\t\t\t\tdate: content.date,\n\t\t\t\tsrc: getServerImage('uploads/blog/', content.image, 'thumb_'),\n\t\t\t},\n\t\t\tcategory: {\n\t\t\t\ttitle: \"Categories\",\n\t\t\t\tul: state.categories,\n\t\t\t},\n\t\t},\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Cover data={detail.cover} />\n\t\t\t<BlogPostsDetail data={detail.posts} />\n\t\t</>\n\t);\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}