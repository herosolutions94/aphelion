{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/aphelion/src/components/pages/Services.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getSiteImages, metaTags, getServerImage, getData } from '../../helpers/api';\nimport Cover from \"../common/Cover\";\nimport ServicesAll from \"./section/ServicesAll\";\nimport Choose from \"./section/Choose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Services() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [state, setState] = useState({});\n  useEffect(() => {\n    window.scrollTo(0, 3);\n    getData(\"services-page\").then(data => {\n      console.log(data);\n      setState({ ...state,\n        content: data.content,\n        metatags: data.metatags,\n        blocks: data.blocks,\n        services: data.services\n      });\n      setLoading(true);\n    });\n  }, []);\n  let content = state.content;\n  if (loading === false) return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loading\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getSiteImages('/images/loading.gif'),\n      alt: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 32\n  }, this);\n  const services = {\n    cover: {\n      sec_bg: getServerImage('uploads/images/', content.image1, 'thumb_'),\n      heading: content.banner_heading\n    },\n    serve: {\n      block: state.services\n    },\n    choose: {\n      heading: content.section1_detail,\n      block: state.blocks\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Cover, {\n      data: services.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ServicesAll, {\n      data: services.serve\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Choose, {\n      data: services.choose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Services, \"8Tj4MntBNUZ1vcGJ2Hc7uqhDwe8=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"sources":["/Users/macbook/Desktop/aphelion/src/components/pages/Services.jsx"],"names":["React","useState","useEffect","getSiteImages","metaTags","getServerImage","getData","Cover","ServicesAll","Choose","Services","loading","setLoading","state","setState","window","scrollTo","then","data","console","log","content","metatags","blocks","services","cover","sec_bg","image1","heading","banner_heading","serve","block","choose","section1_detail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,cAAlC,EAAkDC,OAAlD,QAAiE,mBAAjE;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAV,IAAAA,OAAO,CAAC,eAAD,CAAP,CAAyBW,IAAzB,CAA+BC,IAAD,IAAU;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERQ,QAAAA,OAAO,EAAEH,IAAI,CAACG,OAFN;AAGRC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHP;AAIRC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MAJL;AAKRC,QAAAA,QAAQ,EAAEN,IAAI,CAACM;AALP,OAAD,CAAR;AAOAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,KAVD;AAWA,GAbQ,EAaN,EAbM,CAAT;AAcA,MAAIS,OAAO,GAAGR,KAAK,CAACQ,OAApB;AACA,MAAIV,OAAO,KAAK,KAAhB,EAAuB,oBAAO;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,iCAAmB;AAAK,MAAA,GAAG,EAAER,aAAa,CAAC,qBAAD,CAAvB;AAAgD,MAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEvB,QAAMqB,QAAQ,GAAG;AAChBC,IAAAA,KAAK,EAAE;AACNC,MAAAA,MAAM,EAAErB,cAAc,CAAC,iBAAD,EAAoBgB,OAAO,CAACM,MAA5B,EAAoC,QAApC,CADhB;AAENC,MAAAA,OAAO,EAAEP,OAAO,CAACQ;AAFX,KADS;AAKhBC,IAAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAElB,KAAK,CAACW;AADP,KALS;AAQhBQ,IAAAA,MAAM,EAAE;AACPJ,MAAAA,OAAO,EAAEP,OAAO,CAACY,eADV;AAEPF,MAAAA,KAAK,EAAElB,KAAK,CAACU;AAFN;AARQ,GAAjB;AAaA,sBACC;AAAA,4BACC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,QAAQ,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,WAAD;AAAa,MAAA,IAAI,EAAED,QAAQ,CAACM;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEN,QAAQ,CAACQ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA,kBADD;AAOA;;GA1CQtB,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getSiteImages, metaTags, getServerImage, getData } from '../../helpers/api';\nimport Cover from \"../common/Cover\";\nimport ServicesAll from \"./section/ServicesAll\";\nimport Choose from \"./section/Choose\";\n\nfunction Services() {\n\tconst [loading, setLoading] = useState(false);\n\tconst [state, setState] = useState({\n\n\t});\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 3)\n\t\tgetData(\"services-page\").then((data) => {\n\t\t\tconsole.log(data);\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tcontent: data.content,\n\t\t\t\tmetatags: data.metatags,\n\t\t\t\tblocks: data.blocks,\n\t\t\t\tservices: data.services,\n\t\t\t});\n\t\t\tsetLoading(true);\n\t\t});\n\t}, []);\n\tlet content = state.content;\n\tif (loading === false) return <div id=\"loading\"> <img src={getSiteImages('/images/loading.gif')} alt=\"Loading\" /></div>;\n\n\tconst services = {\n\t\tcover: {\n\t\t\tsec_bg: getServerImage('uploads/images/', content.image1, 'thumb_'),\n\t\t\theading: content.banner_heading,\n\t\t},\n\t\tserve: {\n\t\t\tblock: state.services,\n\t\t},\n\t\tchoose: {\n\t\t\theading: content.section1_detail,\n\t\t\tblock: state.blocks,\n\t\t},\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Cover data={services.cover} />\n\t\t\t<ServicesAll data={services.serve} />\n\t\t\t<Choose data={services.choose} />\n\t\t</>\n\t);\n}\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}