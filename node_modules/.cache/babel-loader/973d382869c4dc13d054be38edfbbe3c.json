{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/aphelion/src/components/pages/BlogCat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { getSiteImages, metaTags, getServerImage, getData } from '../../helpers/api';\nimport Cover from \"../common/Cover\";\nimport BlogPosts from \"./section/BlogPosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BlogCat() {\n  _s();\n\n  let location = useLocation();\n  let pathname = location.pathname;\n  let url_arr = pathname.split(\"/\");\n  let cat_id = url_arr['2'];\n  let ser_slug = url_arr['3'];\n  const [loading, setLoading] = useState(false);\n  const [state, setState] = useState({});\n  useEffect(() => {\n    window.scrollTo(0, 3);\n    getData(\"cat-page\", cat_id + \"/\" + ser_slug).then(data => {\n      setState({ ...state,\n        content: data.content,\n        metatags: data.metatags,\n        categories: data.categories,\n        blogs: data.blogs\n      });\n      setLoading(true);\n    });\n  }, []);\n  let content = state.content;\n  if (loading === false) return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loading\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getSiteImages('/images/loading.gif'),\n      alt: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 54\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 35\n  }, this);\n  const blog = {\n    cover: {\n      sec_bg: getServerImage('uploads/categories/', content.image, 'thumb_'),\n      heading: content.title\n    },\n    posts: {\n      block: state.blogs,\n      category: {\n        title: \"Categories\",\n        ul: state.categories\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [metaTags(state.metatags), /*#__PURE__*/_jsxDEV(Cover, {\n      data: blog.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BlogPosts, {\n      data: blog.posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BlogCat, \"9k1RPzNCLPHgA8hHzPqDaVXC9EY=\", false, function () {\n  return [useLocation];\n});\n\n_c = BlogCat;\nexport default BlogCat;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogCat\");","map":{"version":3,"sources":["/Users/macbook/Desktop/aphelion/src/components/pages/BlogCat.jsx"],"names":["React","useState","useEffect","useLocation","getSiteImages","metaTags","getServerImage","getData","Cover","BlogPosts","BlogCat","location","pathname","url_arr","split","cat_id","ser_slug","loading","setLoading","state","setState","window","scrollTo","then","data","content","metatags","categories","blogs","blog","cover","sec_bg","image","heading","title","posts","block","category","ul"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,cAAlC,EAAkDC,OAAlD,QAAiE,mBAAjE;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;AACA,MAAIS,QAAQ,GAAGD,QAAQ,CAACC,QAAxB;AACA,MAAIC,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAd;AACA,MAAIC,MAAM,GAAGF,OAAO,CAAC,GAAD,CAApB;AACA,MAAIG,QAAQ,GAAGH,OAAO,CAAC,GAAD,CAAtB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAf,IAAAA,OAAO,CAAC,UAAD,EAAaQ,MAAM,GAAG,GAAT,GAAeC,QAA5B,CAAP,CAA6CO,IAA7C,CAAmDC,IAAD,IAAU;AACxDJ,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELM,QAAAA,OAAO,EAAED,IAAI,CAACC,OAFT;AAGLC,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QAHV;AAILC,QAAAA,UAAU,EAAEH,IAAI,CAACG,UAJZ;AAKLC,QAAAA,KAAK,EAAEJ,IAAI,CAACI;AALP,OAAD,CAAR;AAOAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KATD;AAUH,GAZQ,EAYN,EAZM,CAAT;AAaA,MAAIO,OAAO,GAAGN,KAAK,CAACM,OAApB;AACA,MAAIR,OAAO,KAAK,KAAhB,EAAuB,oBAAO;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,iCAAmB;AAAK,MAAA,GAAG,EAAEb,aAAa,CAAC,qBAAD,CAAvB;AAAgD,MAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEvB,QAAMyB,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAEzB,cAAc,CAAC,qBAAD,EAAwBmB,OAAO,CAACO,KAAhC,EAAuC,QAAvC,CADnB;AAEHC,MAAAA,OAAO,EAAER,OAAO,CAACS;AAFd,KADE;AAKTC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEjB,KAAK,CAACS,KADV;AAEHS,MAAAA,QAAQ,EAAE;AACNH,QAAAA,KAAK,EAAE,YADD;AAENI,QAAAA,EAAE,EAAEnB,KAAK,CAACQ;AAFJ;AAFP;AALE,GAAb;AAaA,sBACI;AAAA,eACKtB,QAAQ,CAACc,KAAK,CAACO,QAAP,CADb,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,IAAI,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED,IAAI,CAACM;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH;;GA9CQzB,O;UACUP,W;;;KADVO,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport { getSiteImages, metaTags, getServerImage, getData } from '../../helpers/api';\nimport Cover from \"../common/Cover\";\nimport BlogPosts from \"./section/BlogPosts\";\n\nfunction BlogCat() {\n    let location = useLocation();\n    let pathname = location.pathname;\n    let url_arr = pathname.split(\"/\");\n    let cat_id = url_arr['2'];\n    let ser_slug = url_arr['3'];\n    const [loading, setLoading] = useState(false);\n    const [state, setState] = useState({\n\n    });\n    useEffect(() => {\n        window.scrollTo(0, 3)\n        getData(\"cat-page\", cat_id + \"/\" + ser_slug).then((data) => {\n            setState({\n                ...state,\n                content: data.content,\n                metatags: data.metatags,\n                categories: data.categories,\n                blogs: data.blogs,\n            });\n            setLoading(true);\n        });\n    }, []);\n    let content = state.content;\n    if (loading === false) return <div id=\"loading\"> <img src={getSiteImages('/images/loading.gif')} alt=\"Loading\" /></div>;\n\n    const blog = {\n        cover: {\n            sec_bg: getServerImage('uploads/categories/', content.image, 'thumb_'),\n            heading: content.title,\n        },\n        posts: {\n            block: state.blogs,\n            category: {\n                title: \"Categories\",\n                ul: state.categories,\n            },\n        },\n    };\n    return (\n        <>\n            {metaTags(state.metatags)}\n            <Cover data={blog.cover} />\n            <BlogPosts data={blog.posts} />\n        </>\n    );\n}\n\nexport default BlogCat;\n"]},"metadata":{},"sourceType":"module"}