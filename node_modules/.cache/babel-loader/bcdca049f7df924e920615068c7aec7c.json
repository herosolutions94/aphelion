{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/aphelion/src/components/includes/Newsletter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { postData, checkPattern, getSiteImages } from '../../helpers/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useForm } from \"react-hook-form\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Newsletter(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [newsletter, setNewsletter] = useState({\n    email: ''\n  });\n\n  function onSubmit() {\n    if (newsletter.email_error === true || newsletter.email === '') {\n      setNewsletter({ ...newsletter,\n        email_error: true,\n        email_error_msg: \"Enter a valid email address\"\n      });\n    } else {\n      setNewsletter({ ...newsletter,\n        btn_loading: true\n      });\n      var form_data = new FormData();\n\n      for (var key in newsletter) {\n        form_data.append(key, newsletter[key]);\n      }\n\n      postData(\"newsletter\", form_data).then(data => {\n        if (data.status == 1) {\n          // document.getElementById(\"frmnewsletter\").reset();\n          setNewsletter({ ...newsletter,\n            btn_loading: false,\n            email: \"\"\n          });\n          toast.success(`${data.msg}`, {\n            position: \"top-right\",\n            autoClose: 1000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        } else {\n          setNewsletter({ ...newsletter,\n            btn_loading: false\n          });\n          toast.error(`${data.msg}`, {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      });\n    }\n  }\n\n  function handleNewsletterChange(e) {\n    if (e.target.name === 'email') {\n      let email_chk = checkPattern(e.target.value, /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/);\n\n      if (email_chk === false) {\n        if (e.target.value === '') {\n          setNewsletter({ ...newsletter,\n            email_error: false\n          });\n        } else {\n          setNewsletter({ ...newsletter,\n            [e.target.name]: e.target.value,\n            email_error: true,\n            email_error_msg: \"Invalid e-mail address\"\n          });\n        }\n      } else {\n        setNewsletter({ ...newsletter,\n          [e.target.name]: e.target.value,\n          email_error: false,\n          email_error_msg: \"\"\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscribe\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"fancy\",\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          value: newsletter.email,\n          onChange: handleNewsletterChange,\n          className: contact.email_error === true ? 'input error' : 'input',\n          placeholder: \"Enter Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: newsletter.btn_loading === true ? 'disabled' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSiteImages(\"/images/icon-send.svg\"),\n            alt: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this), \" \", newsletter.btn_loading === true ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 108\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Newsletter, \"MclSLdkBqQ8wl1HB+0LGhh3PfhM=\", false, function () {\n  return [useForm];\n});\n\n_c = Newsletter;\nexport default Newsletter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"sources":["/Users/macbook/Desktop/aphelion/src/components/includes/Newsletter.jsx"],"names":["React","useState","postData","checkPattern","getSiteImages","ToastContainer","toast","useForm","Newsletter","props","register","handleSubmit","formState","errors","newsletter","setNewsletter","email","onSubmit","email_error","email_error_msg","btn_loading","form_data","FormData","key","append","then","data","status","success","msg","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","handleNewsletterChange","e","target","name","email_chk","value","text","contact"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { postData, checkPattern, getSiteImages } from '../../helpers/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useForm } from \"react-hook-form\";\nimport 'react-toastify/dist/ReactToastify.css';\nfunction Newsletter(props) {\n\tconst { register, handleSubmit, formState: { errors } } = useForm();\n\tconst [newsletter, setNewsletter] = useState({\n\t\temail: '',\n\t});\n\tfunction onSubmit() {\n\n\t\tif (newsletter.email_error === true || newsletter.email === '') {\n\t\t\tsetNewsletter({ ...newsletter, email_error: true, email_error_msg: \"Enter a valid email address\" });\n\t\t}\n\n\t\telse {\n\t\t\tsetNewsletter({ ...newsletter, btn_loading: true });\n\t\t\tvar form_data = new FormData();\n\n\t\t\tfor (var key in newsletter) {\n\t\t\t\tform_data.append(key, newsletter[key]);\n\t\t\t}\n\t\t\tpostData(\"newsletter\", form_data).then((data) => {\n\t\t\t\tif (data.status == 1) {\n\t\t\t\t\t// document.getElementById(\"frmnewsletter\").reset();\n\t\t\t\t\tsetNewsletter({ ...newsletter, btn_loading: false, email: \"\" });\n\t\t\t\t\ttoast.success(`${data.msg}`, {\n\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\tautoClose: 1000,\n\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetNewsletter({ ...newsletter, btn_loading: false });\n\t\t\t\t\ttoast.error(`${data.msg}`, {\n\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\tautoClose: 2000,\n\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tfunction handleNewsletterChange(e) {\n\n\t\tif (e.target.name === 'email') {\n\n\t\t\tlet email_chk = checkPattern(e.target.value, /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/);\n\n\t\t\tif (email_chk === false) {\n\t\t\t\tif (e.target.value === '') {\n\t\t\t\t\tsetNewsletter({ ...newsletter, email_error: false });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetNewsletter({ ...newsletter, [e.target.name]: e.target.value, email_error: true, email_error_msg: \"Invalid e-mail address\" });\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetNewsletter({ ...newsletter, [e.target.name]: e.target.value, email_error: false, email_error_msg: \"\" });\n\t\t\t}\n\n\t\t}\n\n\t}\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer />\n\t\t\t<div className=\"subscribe\">\n\t\t\t\t<span className=\"fancy\">{props.text}</span>\n\t\t\t\t<form method=\"post\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" value={newsletter.email} onChange={handleNewsletterChange} className={(contact.email_error === true) ? 'input error' : 'input'} placeholder=\"Enter Email Address\" />\n\t\t\t\t\t<button type=\"submit\" disabled={(newsletter.btn_loading === true) ? 'disabled' : ''}>\n\t\t\t\t\t\t<img src={getSiteImages(\"/images/icon-send.svg\")} alt=\"Send\" /> {(newsletter.btn_loading === true) ? <i className=\"spinner\"></i> : ''}\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Newsletter;\n"]},"metadata":{},"sourceType":"module"}